{
    "schemes": [
        "http"
    ],
    "swagger": "2.0",
    "info": {
        "description": "Сервис выпуска одноразовых пропусков.",
        "title": "issue-service API",
        "contact": {},
        "version": "1.0"
    },
    "host": "localhost:8081",
    "basePath": "/api/v1",
    "paths": {
        "/.well-known/keys": {
            "get": {
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "keys"
                ],
                "summary": "JWKS набор ключей",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/http.jwkSet"
                        }
                    }
                }
            }
        },
        "/healthz": {
            "get": {
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "meta"
                ],
                "summary": "Liveness probe",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/http.HealthzResponse"
                        }
                    }
                }
            }
        },
        "/passes": {
            "post": {
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "passes"
                ],
                "summary": "Выпуск пропуска",
                "parameters": [
                    {
                        "description": "Create pass",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/dto.CreatePassRequest"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Created",
                        "schema": {
                            "$ref": "#/definitions/dto.CreatePassResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/http.APIError"
                        }
                    },
                    "503": {
                        "description": "Service Unavailable",
                        "schema": {
                            "$ref": "#/definitions/http.APIError"
                        }
                    }
                }
            }
        },
        "/passes/{id}/approve": {
            "post": {
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "pickup"
                ],
                "summary": "Сгенерировать pickup-token",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Pass ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/dto.ApproveResponse"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/http.APIError"
                        }
                    },
                    "409": {
                        "description": "Conflict",
                        "schema": {
                            "$ref": "#/definitions/http.APIError"
                        }
                    }
                }
            }
        },
        "/passes/{id}/revoke": {
            "post": {
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "passes"
                ],
                "summary": "Отзыв пропуска",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Pass ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/dto.RevokeResponse"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/http.APIError"
                        }
                    },
                    "409": {
                        "description": "Conflict",
                        "schema": {
                            "$ref": "#/definitions/http.APIError"
                        }
                    }
                }
            }
        },
        "/pickup": {
            "post": {
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "pickup"
                ],
                "summary": "Получить payload по pickup-token",
                "parameters": [
                    {
                        "description": "Pickup",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/dto.PickupRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/dto.PickupResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/http.APIError"
                        }
                    }
                }
            }
        },
        "/readyz": {
            "get": {
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "meta"
                ],
                "summary": "Readiness probe",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/http.ReadyzResponse"
                        }
                    },
                    "503": {
                        "description": "Service Unavailable",
                        "schema": {
                            "$ref": "#/definitions/http.APIError"
                        }
                    }
                }
            }
        }
    },
    "definitions": {
        "dto.ApproveResponse": {
            "type": "object",
            "properties": {
                "expires_at": {
                    "type": "string"
                },
                "id": {
                    "type": "string"
                },
                "pickup_token": {
                    "type": "string"
                }
            }
        },
        "dto.CreatePassRequest": {
            "type": "object",
            "properties": {
                "attrs": {
                    "type": "object",
                    "additionalProperties": {}
                },
                "exp": {
                    "type": "string"
                },
                "nbf": {
                    "type": "string"
                },
                "one_time": {
                    "type": "boolean"
                },
                "org_id": {
                    "type": "string"
                },
                "policy_id": {
                    "type": "string"
                },
                "subject_name": {
                    "type": "string"
                },
                "zone_id": {
                    "type": "string"
                }
            }
        },
        "dto.CreatePassResponse": {
            "type": "object",
            "properties": {
                "id": {
                    "type": "string"
                },
                "issuer_key_id": {
                    "type": "string"
                },
                "payload": {
                    "type": "string"
                },
                "status": {
                    "type": "string"
                }
            }
        },
        "dto.PickupRequest": {
            "type": "object",
            "properties": {
                "token": {
                    "type": "string"
                }
            }
        },
        "dto.PickupResponse": {
            "type": "object",
            "properties": {
                "issuer_key_id": {
                    "type": "string"
                },
                "payload": {
                    "type": "string"
                }
            }
        },
        "dto.RevokeResponse": {
            "type": "object",
            "properties": {
                "id": {
                    "type": "string"
                },
                "status": {
                    "type": "string"
                }
            }
        },
        "http.APIError": {
            "type": "object",
            "properties": {
                "code": {
                    "type": "string"
                },
                "details": {},
                "message": {
                    "type": "string"
                }
            }
        },
        "http.HealthzResponse": {
            "type": "object",
            "properties": {
                "status": {
                    "type": "string"
                }
            }
        },
        "http.ReadyzResponse": {
            "type": "object",
            "properties": {
                "status": {
                    "type": "string"
                }
            }
        },
        "http.jwk": {
            "type": "object",
            "properties": {
                "alg": {
                    "type": "string"
                },
                "crv": {
                    "type": "string"
                },
                "kid": {
                    "type": "string"
                },
                "kty": {
                    "type": "string"
                },
                "x": {
                    "type": "string"
                }
            }
        },
        "http.jwkSet": {
            "type": "object",
            "properties": {
                "keys": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/http.jwk"
                    }
                }
            }
        }
    }
}